(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{420:function(t,s,n){"use strict";n.r(s);var a=n(55),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"how-to-write-json-config-to-match-your-model"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#how-to-write-json-config-to-match-your-model"}},[t._v("#")]),t._v(" How to write json config to match your model")]),t._v(" "),n("p",[t._v("The json config is an important file to help you run model on NCC.")]),t._v(" "),n("h3",{attrs:{id:"nccvideoconvert"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nccvideoconvert"}},[t._v("#")]),t._v(" nccVideoConvert")]),t._v(" "),n("p",[t._v("This plug-in help you convert video or image data to tensor.")]),t._v(" "),n("p",[n("strong",[t._v("Parameters:")])]),t._v(" "),n("p",[n("code",[t._v("enabled")]),t._v(" - Flag to enable plug-in")]),t._v(" "),n("p",[n("code",[t._v("linkIn")]),t._v('  - Choose input source. (["input"]: external input by USB. ["camera"]: internal input from camera of NCC.)')]),t._v(" "),n("p",[n("code",[t._v("inputTensor")]),t._v(" - Shape of input source. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),n("p",[n("code",[t._v("inputType")]),t._v(' - Format of input source. Option: "bgr_planar_u8", "YUV420"')]),t._v(" "),n("p",[n("code",[t._v("ROI")]),t._v(" - Region of interest. Such as: [Start_X, Start_Y, End_X, End_Y]")]),t._v(" "),n("p",[n("code",[t._v("meanValue")]),t._v(" - "),n("em",[t._v("No description available")])]),t._v(" "),n("p",[n("code",[t._v("stdValue")]),t._v(" - "),n("em",[t._v("No description available")])]),t._v(" "),n("p",[n("code",[t._v("outputTensor")]),t._v("  - Shape of output tensor. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),n("p",[n("code",[t._v("outputType")]),t._v(" -  Format of output tensor.")]),t._v(" "),n("p",[n("code",[t._v("linkOut")]),t._v(" - next plug-in")]),t._v(" "),n("h3",{attrs:{id:"nccinference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nccinference"}},[t._v("#")]),t._v(" nccInference")]),t._v(" "),n("p",[t._v("This plug-in help you to inference model on NCC.")]),t._v(" "),n("p",[n("strong",[t._v("Parameters:")])]),t._v(" "),n("p",[n("code",[t._v("enabled")]),t._v(" - Flag to enable plug-in")]),t._v(" "),n("p",[n("code",[t._v("linkIn")]),t._v("  - last plug-in")]),t._v(" "),n("p",[n("code",[t._v("inputTensor")]),t._v(" - Shape of input source. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),n("p",[n("code",[t._v("inputType")]),t._v(' - Format of input source. Option: "BGR_PLANAR_FP16"')]),t._v(" "),n("p",[n("code",[t._v("extInputs1")]),t._v("- "),n("em",[t._v("No description available")])]),t._v(" "),n("p",[n("code",[t._v("extInputs2")]),t._v("- "),n("em",[t._v("No description available")])]),t._v(" "),n("p",[n("code",[t._v("extInputs3")]),t._v("- "),n("em",[t._v("No description available")])]),t._v(" "),n("p",[n("code",[t._v("outputTensor")]),t._v(" - Shape of output tensor. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),n("p",[n("code",[t._v("outputType")]),t._v(' - Format of output tensor. Option: "CV_FP16"')]),t._v(" "),n("p",[n("code",[t._v("linkOut")]),t._v(" - next plug-in")]),t._v(" "),n("h3",{attrs:{id:"ncctensorconvert"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ncctensorconvert"}},[t._v("#")]),t._v(" nccTensorConvert")]),t._v(" "),n("p",[t._v("This plug-in help you to convert format of tensor.")]),t._v(" "),n("p",[n("strong",[t._v("Parameters:")])]),t._v(" "),n("p",[n("code",[t._v("enabled")]),t._v(" - Flag to enable plug-in")]),t._v(" "),n("p",[n("code",[t._v("linkIn")]),t._v("  - last plug-in")]),t._v(" "),n("p",[n("code",[t._v("inputTensor")]),t._v(" - Shape of input source. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),n("p",[n("code",[t._v("inputType")]),t._v(' - Format of input source. Option: "CV_FP16"')]),t._v(" "),n("p",[n("code",[t._v("outputTensor")]),t._v(" - Shape of output tensor. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),n("p",[n("code",[t._v("outputType")]),t._v(' - Format of output tensor. Option: "CV_FP32"')]),t._v(" "),n("p",[n("code",[t._v("linkOut")]),t._v(" - next plug-in or output")]),t._v(" "),n("hr"),t._v(" "),n("p",[n("strong",[t._v("In model_zoo, we have provided some reference config for you to run example quickly.")])]),t._v(" "),n("p",[t._v("Template is as following:")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[t._v("      "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"blob"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<model name>"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Function"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This template is used to help you create config with your model."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nccVideoConvert"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkIn"')]),t._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<source>:[input,camera]"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputTensor"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("H"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("W"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputType"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<source>:[bgr_planar_u8,YUV420]"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ROI"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Start_X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Start_Y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" End_X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" End_Y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"meanValue"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stdValue"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputTensor"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("H"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("W"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputType"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BGR_PLANAR_FP16"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkOut"')]),t._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nccInference"')]),t._v("       \n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nccInference"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkIn"')]),t._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nccVideoConvert"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputTensor"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("H"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("W"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputType"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BGR_PLANAR_FP16"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extInputs1"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extInputs2"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extInputs3"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputTensor"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputType"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CV_FP16"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkOut"')]),t._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nccTensorConvert"')]),t._v("     \n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nccTensorConvert"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkIn"')]),t._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nccInference"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputTensor"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputType"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CV_FP16"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputTensor"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputType"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CV_FP32"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   \n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkOut"')]),t._v("     "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output"')]),t._v("   \n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);